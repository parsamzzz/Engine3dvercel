// routes/music.js
import express from 'express';
import axios from 'axios';

const router = express.Router();

const BASE_URL = 'https://api.musicgpt.com/api/public/v1';
const API_KEY = 'oZUxto2nBJQYM88WLXbwUwu0TS8vOcAd7zBNOBWfnvR6MEWPzSyBdOLsr3S02fXXm8F7QKG35m-8kWak8szUFQ';

/* üéµ ÿ≥ÿßÿÆÿ™ ŸÖŸàÿ≤€å⁄© ÿ®ÿß MusicAI */
router.post('/create', async (req, res) => {
  const {
    prompt,
    music_style,
    lyrics,
    make_instrumental = false,
    vocal_only = false,
    voice_id,
    webhook_url
  } = req.body;

  if (!prompt) {
    return res.status(400).json({ error: '‚ùå ŸÅ€åŸÑÿØ prompt ÿßŸÑÿ≤ÿßŸÖ€å ÿßÿ≥ÿ™.' });
  }

  try {
    const response = await axios.post(
      `${BASE_URL}/MusicAI`,
      { prompt, music_style, lyrics, make_instrumental, vocal_only, voice_id, webhook_url },
      {
        headers: { Authorization: API_KEY, 'Content-Type': 'application/json' }
      }
    );

    // Ÿæÿßÿ≥ÿÆ ÿ¥ÿßŸÖŸÑ task_id Ÿà conversion_id_1 Ÿà conversion_id_2 ÿßÿ≥ÿ™
    res.json(response.data);
  } catch (err) {
    console.error('‚ùå MusicAI error:', err.response?.data || err.message);
    res.status(500).json({ error: err.response?.data || err.message });
  }
});

/* üîé ÿ®ÿ±ÿ±ÿ≥€å Ÿàÿ∂ÿπ€åÿ™ ÿ™ŸàŸÑ€åÿØ ŸÖŸàÿ≤€å⁄© */
router.get('/status/:conversionId', async (req, res) => {
  const { conversionId } = req.params;

  try {
    const response = await axios.get(`${BASE_URL}/byId`, {
      headers: { Authorization: API_KEY },
      params: {
        conversion_id: conversionId,
        conversionType: 'MUSIC_AI'       // üëà ÿ≠ÿ™ŸÖÿßŸã ÿ®ÿ±ÿß€å MusicAI
      }
    });

    res.json(response.data);
  } catch (err) {
    console.error('‚ùå Status error:', err.response?.data || err.message);
    res.status(500).json({ error: err.response?.data || err.message });
  }
});

/* üé§ ÿØÿ±€åÿßŸÅÿ™ ŸÑ€åÿ≥ÿ™ ÿµÿØÿßŸáÿß ÿ®ÿ±ÿß€å ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿØÿ± MusicAI */
router.get('/voices', async (req, res) => {
  const { limit = 20, page = 0 } = req.query;

  try {
    const response = await axios.get(`${BASE_URL}/getAllVoices`, {
      headers: { Authorization: API_KEY },
      params: { limit, page }
    });

    res.json(response.data);
  } catch (err) {
    console.error('‚ùå Voices List error:', err.response?.data || err.message);
    res.status(500).json({ error: err.response?.data || err.message });
  }
});

export default router;
